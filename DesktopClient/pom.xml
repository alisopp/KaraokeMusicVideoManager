<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>AnonymerNiklasistanonym.KaraokeMusicVideoManager</groupId>
	<artifactId>KaraokeMusicVideoManager</artifactId>
	<version>2.0.0</version>
	<packaging>jar</packaging>

	<name>KaraokeMusicVideoManager - Desktop Client</name>
	<url>https://github.com/AnonymerNiklasistanonym/KaraokeMusicVideoManager</url>
	<description>A software that scans folders after music videos, brings them together in a list and starts them. After this there will also come a website where people can say/post which song they want to do next.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.54</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>zxing-parent</artifactId>
			<version>3.3.0</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx</artifactId>
			<version>11</version>
			<type>pom</type>
		</dependency>
	</dependencies>


	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>

			<!-- Delete if no solution will be found: Add resource folder and files to maven -->
			<resource>
				<directory>res</directory>
				<includes>
					<include>**/*.json</include>
					<include>**/*.fxml</include>
					<include>**/*.ico</include>
					<include>**/*.png</include>
					<include>**/*.svg</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!-- Delete if no solution will be found: Specify the compiler version for maven -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!--<plugin> 
				Compile jar without dependencies (dependencies are neeeded!! because of SFTP libary and JavaFx)
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					We want to compile to the main directory
					<outputDirectory>../</outputDirectory>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>anonymerniklasistanonym.karaokemusicvideomanager.desktopclient.gui.Main</mainClass>
						</manifest>
						<manifestEntries>
							<mode>development</mode>
							<url>${project.url}</url>
							<key>value</key>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin> -->
			<plugin>
				<!-- Delete if no solution will be found: We want to add all dependencies to the jar -->
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- We want to compile to the main directory -->
					<outputDirectory>../</outputDirectory>
					<archive>
						<manifest>
							<mainClass>anonymerniklasistanonym.karaokemusicvideomanager.desktopclient.gui.Main</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
